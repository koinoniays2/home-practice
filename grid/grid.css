.container {
    display: grid;
    grid-template-columns: repeat(5, 20%); /* 5개의 columns을 20% 너비로
    grid-template-columns: 몇개의 컬럼을 만들것인지와 사이즈(컬럼 너비=가로 너비) 정하기
    repeat()함수로 갯수, 크기 
    1fr 1fr 1fr => 사용 가능한 부모 너비에 하나씩 비율을 나눈다.(배율)
    px보단 반응형으로 사이즈를 %나 fr로 유동적으로 변경되도록 만드는게 좋다. */
    /* grid-template-rows: 몇개의 로우를 만들것인지와 사이즈(로우 너비=세로 너비) 정하기 ; 
    grid-template-rows: 100px 200px 100px 100px; 
    이렇게 명시적으로 지정해도 되지만 컬럼에 따라 줄 갯수에 상관없이 크기만 지정 가능*/
    grid-auto-rows: minmax(150px, auto); 
    /*minmax()함수:최소높이 150px 유지, 컨텐츠가 많은 경우 자동으로 크기가 늘어남  */
    /* column-gap: 10px;
    row-gap: 10px; */
    gap: 10px;
    /* column-gap, row-gap, gap: 셀들 사이의 스페이스 
    grid 전체적으로 균일한 gap을 주고싶다면 -> padding */
    padding: 10px;

}

.item2 {
    /* grid라인을 이용해 범위지정 컬럼 기준으로 제일 왼쪽이 1번
    start:1 end:3 (1번 라인부터 3번째 라인까지)
    끝부분부터 기준으로는 -1~ */
    /* grid-column-start: 2;
    grid-column-end: 4; */
    /* grid-column: 2 / 4; 로 축약 가능 */
    /* grid-column: 2 / -1; 제일 끝까지 차지 */
    grid-column: 2 / span 2; /* span으로 표현: 2번째 부터 / 2개의 쉘을 합함*/
    /* grid-row-start: 1;
    grid-row-end: 3; */
    grid-row: 1 / 3;
}